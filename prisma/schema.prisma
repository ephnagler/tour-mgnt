datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Daysheet {
  id           String     @id @default(cuid())
  slug         String     @unique
  date         String
  venue        Venue?     @relation(fields: [venueId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  venueId      String     @unique
  hotel        Hotel?     @relation(fields: [hotelId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  hotelId      String     @unique
  contacts     Contact[]
  guests       Guest[]
  guestsLimit  Int        @default(20)
  buyOut       Boolean    @default(false)
  buyOutAmount Int        @default(0)
  buyOutAlt    String     @default("Dinner Provided")
  schedules    Schedule[]
  mapIn        String?
  mapOut       String?
}

model Venue {
  id   String @id @default(cuid())
  slug String @unique
  name String
  site String

  street String
  city   String
  state  String
  zip    String
  phone  String
  email  String

  contacts Contact[]
  daysheet Daysheet?
}

model Hotel {
  id   String @id @default(cuid())
  slug String @unique
  name String
  site String

  street String
  city   String
  state  String
  zip    String
  phone  String
  email  String

  daysheet Daysheet?
}

model Contact {
  id         String    @id @default(cuid())
  slug       String    @unique
  name       String
  role       String
  phone      String
  email      String
  venue      Venue?    @relation(fields: [venueId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  venueId    String?
  daysheet   Daysheet? @relation(fields: [daysheetId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  daysheetId String?
}

model Guest {
  id         String    @id @default(cuid())
  slug       String    @unique
  name       String
  party      Int       @default(0)
  daysheet   Daysheet? @relation(fields: [daysheetId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  daysheetId String?
}

model Schedule {
  id         String    @id @default(cuid())
  slug       String    @unique
  name       String
  alert      String    @default("none")
  note       String
  timeFrom   String
  timeTo     String?
  daysheet   Daysheet? @relation(fields: [daysheetId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  daysheetId String?   @unique
}
